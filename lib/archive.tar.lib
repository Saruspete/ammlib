# vim: ft=sh ts=4

if ! [[ "${FUNCNAME[1]}" = ammLib::Load* ]]; then
	echo >&2 "You must not source this library ($BASH_SOURCE): Use function ammLib::Load"
	exit 1
fi

# -----------------------------------------------------------------------------
# AMM Lib meta stubs
# -----------------------------------------------------------------------------

function ammArchiveTar::MetaCheck {
	ammExec::Require tar
}

# -----------------------------------------------------------------------------
# Some description for your lib
# -----------------------------------------------------------------------------

function ammArchiveTar::_FormatToOpt {
	typeset file="$1"

	typeset opt=""

	# Preprocessing if needed (could use -a)
	case $file in
		*tar.gz|*.tgz)   opt=" -z" ;;
		*.tar.bz2|*.tbz) opt=" -j" ;;
		*.tar.xz|*.txz)  opt=" -J" ;;
		*.tar.lzma|*.tlzma) opt=" --lzma" ;;
	esac

	echo "$opt"
}

function ammArchiveTar::FormatHandled {
	typeset file="$1"

}


# @description  Extract an archive file
# @arg $1  
function ammArchiveTar::Unpack {
	typeset vers="$1"
	typeset src="$2"

	typeset file="${src##*/}"
	typeset path="${src%/*}"
	typeset -i ret=0

	typeset tarBin="\\tar"
	typeset -a tarOpts=("-C" "$path")


	typeset preprocess="$(ammArchiveTar::_FormatToOpt "$file")"
	[[ -n "$preprocess" ]] && tarOpts+=("$preprocess")

	# Check if we should strip the first path or not
	typeset strip=" --strip-components=1"
	while read line; do
		# If no transformation is done, we have one or more folder at root level.
		# Folders always ends with "/", even "./"
		[[ "${line##*/}" == "$line" ]] && {
			ammLog::Warning "One or more file found at root archive. Not stripping first level"
			strip=""
			break
		}
		# If the tarball starts with "./", we need to strip it too
		[[ "${line}" =~ ^\./ ]] && {
			strip=" --strip-components=2"
		}
	done < <(\tar "${tarOpts[@]}" -t -f "$src")

	# Add the strip (if any left)
	tarOpts+=("$strip")

	# Unpack the tarball
	ammLog::Info "Unpacking $file with tar opts: ${tarOpts[@]}"
	set -o pipefail
	${tarBin} "${tarOpts[@]}" -x -p -f "$src" 2>&1 | ammLog::Debug -
	set +o pipefail

	ret=$?
}


function ammArchiveTar::Pack {
	:
}


